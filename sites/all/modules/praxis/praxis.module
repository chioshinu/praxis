<?php
/**
 * Create doctor biography
 *
 * @param $edit
 * @param $account
 * @param $category
 */
function praxis_user_insert(&$edit, $account, $category) {
    if (isset($account->roles[4])){
        $bio = entity_create('node', array('type' => 'doctor_biography', 'uid' => $account->uid, 'language' => 'en'));
        $ewrapper = entity_metadata_wrapper('node', $bio);
        $ewrapper->field_email->set($account->mail);
        $ewrapper->save(true);
        entity_save('node', $bio);
    }
}

function praxis_user_update(&$edit, $account, $category) {

}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function praxis_block_info() {
    $blocks['home_doctors'] = array(
        'info' => t('Home doctors')
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function praxis_block_view($delta = '') {
    // The $delta parameter tells us which block is being requested.
    switch ($delta) {
        case 'home_doctors':
            // The subject is displayed at the top of the block. Note that it
            // should be passed through t() for translation. The title configured
            // for the block using Drupal UI supercedes this one.
            $block['subject'] = t('Willkommen in der 24h Praxis am Bahnhof Ruti, die Praxis fur allgemeine Medizin und Spezialgebiete');
            // The content of the block is typically generated by calling a custom
            // function.
            $block['content'] = praxis_home_doctors_contents($delta);
            break;
    }
    return $block;
}

function praxis_home_doctors_contents(){
    $nodes = node_load_multiple(array(), array('type' => 'doctor_biography'));
//    debug($nodes);
    $data = array();
    $i = 0;
    foreach($nodes as $bio){
        if ($i == 0){
            $slide = array();
        }
        $slide[] = $bio;
        if ($i == 9){
            $data[] = $slide;
            $i = 0;
        }
        else{
            $i++;
        }
    }
    if ($i<9 && count($slide) >0){
        $data[] = $slide;
    }

    drupal_add_js(drupal_get_path('module', 'praxis') . '/js/jquery.slides.js');
    $build['myelement'] = array(
        '#theme' => 'doctors_block',
        '#doctors' => $data,
    );
    $output = theme('doctors_home_block', array('doctors' => $data));
    return $output;
}

function praxis_theme() {
    global $language;
    return array(
        'doctors_home_block' => array(
            'template' => 'doctors',
            'variables' => array('doctors' => array(), 'lang' => $language->language),
        ),
    );
}

//function praxis_js_alter(&$javascript) {
//    //We define the path of our new jquery core file
//    //assuming we are using the minified version 1.9.1
//    $jquery_path = drupal_get_path('module','praxis') . '/js/jquery-1.9.1.min.js';
//    //We duplicate the important information from the Drupal one
//    $javascript[$jquery_path] = $javascript['misc/jquery.js'];
//    //..and we update the information that we care about
//    $javascript[$jquery_path]['version'] = '1.9.1';
//    $javascript[$jquery_path]['data'] = $jquery_path;
//    //Then we remove the Drupal core version
//    unset($javascript['misc/jquery.js']);
//}