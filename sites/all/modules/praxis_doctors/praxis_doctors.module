<?php
/**
 * Create doctor biography
 *
 * @param $edit
 * @param $account
 * @param $category
 */
function praxis_doctors_user_insert(&$edit, $account, $category) {
    if (isset($account->roles[4])){
        $bio = entity_create('node', array('type' => 'doctor_biography', 'uid' => $account->uid, 'status' => 0, 'language' => 'en'));
        $ewrapper = entity_metadata_wrapper('node', $bio);
        $ewrapper->field_email->set($account->mail);
        $ewrapper->save(true);
        entity_save('node', $bio);
    }
}

function praxis_doctors_user_login(&$edit, $account){
//    if ($account->access == "0" and isset($account->roles[4])){
    if (isset($account->roles[4])){
        $nodes = node_load_multiple(array(), array('type' => 'doctor_biography', 'uid' => $account->uid));
        if (count($nodes)>0)
        {
            $node = array_shift($nodes);
            $edit['redirect'] = 'node/'.$node->nid.'/edit';
        }
        else{
            $edit['redirect'] = '/';
        }
    }
    elseif(!isset($account->roles[5])){
        $edit['redirect'] = '/';
    }
}

function praxis_doctors_form_alter(&$form, &$form_state, $form_id){
    global $user;
    if ($form_id == 'doctor_biography_node_form' and (isset($user->roles[4]) || in_array('administrator', array_values($user->roles)) || in_array('Super admin', array_values($user->roles)))){
        $form['actions']['submit']['#submit'][] = 'praxis_doctor_biografy_form_submit_alter';
    }
    if ($form_id == 'doctor_page_node_form' and (isset($user->roles[4]) || in_array('administrator', array_values($user->roles)) || in_array('Super admin', array_values($user->roles)))){
        $form['actions']['submit']['#submit'][] = 'praxis_doctor_page_form_submit_alter';
    }
    if ($form_id == 'news_node_form'){
        $form['actions']['submit']['#submit'][] = 'praxis_doctor_news_form_submit_alter';
    }
    if ($form_id == 'downloads_node_form'){
        $form['actions']['submit']['#submit'][] = 'praxis_doctor_downloads_form_submit_alter';
    }
    if ($form_id == 'user_register_form') {
        $form['account']['notify']['#default_value'] = TRUE;
    }
}

function praxis_doctor_downloads_form_submit_alter($form, &$form_state){
    $form_state['redirect'] = '/';
}

function praxis_doctor_biografy_form_submit_alter($form, &$form_state){
    global $language;
//    $part = $language->language == 'en' ? '' : '/'.$language->language;
    $form_state['redirect'] = 'team/doctors/'.$form['nid']['#value'];
}

function praxis_doctor_page_form_submit_alter($form, &$form_state){
    global $language;
    global $user;
//    $part = $language->language == 'en' ? '' : '/'.$language->language;
    $nodes = node_load_multiple(array(), array('type' => 'doctor_biography', 'uid' => $form['#entity']->uid));
    if (count($nodes)>0){
        $node = array_shift($nodes);
        $form_state['redirect'] = 'team/doctors/'.$node->nid.'/page/'.$form['nid']['#value'];
    }
}

function praxis_doctor_news_form_submit_alter($form, &$form_state){
    $form_state['redirect'] = 'admin/content';
}

function praxis_doctors_menu() {
    $items['team/doctors'] = array(
        'title' => 'Doctors',
        'page callback' => 'team_view',
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'file' => 'pages.inc'
    );
    $items['team/therapists'] = array(
        'page callback' => 'team_view',
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'file' => 'pages.inc'
    );
    $items['team/staff'] = array(
        'page callback' => 'team_view',
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'file' => 'pages.inc'
    );
    $items['team/doctors/%'] = array(
        'title callback' => 'single_doctor_title',
        'title arguments' => array(2),
        'page callback' => 'doctor_view',
        'page arguments' => array(2),
        'access arguments' => array('access content'),
        'file' => 'pages.inc'
    );
    $items['team/doctors/%/page/%'] = array(
        'page callback' => 'doctor_view_page',
        'page arguments' => array(2, 4),
        'access arguments' => array('access content'),
        'file' => 'pages.inc'
    );
    return $items;
}

function single_doctor_title($id){
    global $language;
    $doctor = node_load($id);
    $items = field_get_items('node', $doctor, 'title_field');
    $name = field_view_value('node', $doctor, 'title_field', $items[0], array(), $language->language);
    return $name['#markup'];
}

function praxis_doctors_user_update(&$edit, $account, $category) {

}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function praxis_doctors_block_info() {
    $blocks['home_doctors'] = array(
        'info' => t('Home doctors')
    );
    $blocks['specializations'] = array(
        'info' => t('Specialties Block')
    );
    $blocks['home_specializations'] = array(
        'info' => t('Home page Specialties Block')
    );
    $blocks['address_block'] = array(
        'info' => t('Address Block with accordeon')
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function praxis_doctors_block_view($delta = '') {
    // The $delta parameter tells us which block is being requested.
    switch ($delta) {
        case 'home_doctors':
            // The subject is displayed at the top of the block. Note that it
            // should be passed through t() for translation. The title configured
            // for the block using Drupal UI supercedes this one.
            $block['subject'] = t('Willkommen in der 24h Praxis am Bahnhof Ruti, die Praxis fur allgemeine Medizin und Spezialgebiete');
            // The content of the block is typically generated by calling a custom
            // function.
            $block['content'] = praxis_doctors_home_doctors_contents($delta);
            break;
        case 'specializations':
            $block['content'] = praxis_doctors_block_specializations();
            break;
        case 'home_specializations':
            $block['content'] = praxis_doctors_block_specializations();
            break;
        case 'address_block':
            $block['content'] = praxis_doctors_block_address();
            break;
    }
    return $block;
}

function praxis_doctors_home_doctors_contents(){
    global $language;
    $nodes = node_load_multiple(array(), array('type' => 'doctor_biography', 'status' => 1));
//    debug($nodes);
    $data = array();
    $i = 0;
    foreach($nodes as $bio){
        if ($i == 0){
            $slide = array();
        }
        $slide[] = $bio;
        if ($i == 9){
            $data[] = $slide;
            $i = 0;
        }
        else{
            $i++;
        }
    }
    if ($i<9 && count($slide) >0){
        $data[] = $slide;
    }

    drupal_add_js(drupal_get_path('module', 'praxis_doctors') . '/js/jquery.slides.js');
    $build['myelement'] = array(
        '#theme' => 'doctors_block',
        '#doctors' => $data,
    );
    $output = theme('doctors_home_block', array('doctors' => $data, 'lang' => $language->language));
    return $output;
}

function praxis_doctors_block_specializations(){
    global $language;
    $terms = i18n_taxonomy_localize_terms(taxonomy_get_tree(2, 0, null, true));
    return theme('specialization_block', array('terms' => $terms, 'lang' => $language->language));

}

function praxis_doctors_theme() {
    global $language;
    return array(
        'doctors_home_block' => array(
            'template' => 'doctors',
            'variables' => array('doctors' => array(), 'lang' => $language->language),
        ),
        'doctors_page' => array(
            'template' => 'doctors_page',
            'variables' => array(
                'data' => array(),
                'terms' => array(),
                'image_field' => '',
                'is_staff' => false,
                'lang' => $language->language
            ),
        ),
        'specialization_block' => array(
            'template' => 'specialization_block',
            'variables' => array('terms' => array(), 'lang' => $language->language),
        ),
        'single_doctor_page' => array(
            'template' => 'single_doctor_page',
            'variables' => array(
                'doctor' => array(),
                'pages' => array(),
                'lang' => $language->language,
                'user' => null,
                'page' => null
            ),
        ),
        'address_block' => array(
            'template' => 'address_block',
            'variables' => array(
                'data' => array(),
                'terms' => array(),
                'lang' => $language->language
            )
        )
    );
}

function praxis_doctors_block_address(){
    global $language;


    $terms = taxonomy_get_tree(5, 0, null, true);
    $arr = array('' => 'Uncategorized');
    foreach($terms as $value){
        $term = i18n_taxonomy_term_get_translation($value, $language->language);

        $arr[$term->tid] = $term->name;
    }
    $js = array();


    $nodes = node_load_multiple(array(), array('type' => 'adressen_page', 'status' => 1));


//    drupal_debug($nodes[0]);
    $res = array();
    $i =0;
    foreach ($nodes as $node){
        if (count($node->field_categories)>0){
            $category = '';
            $category = array_values($node->field_categories);
            $category = $category[0];
            $term = taxonomy_term_load($category[0]['tid']);
            $translation = i18n_taxonomy_term_get_translation($term, $language->language);
            if (!isset($res[$translation->tid])){

                $js[slug($arr[$translation->tid])] = $i;
                $i++;
            }
            $res[$translation->tid][] = $node;
        }
        else{
            $res[''][] = $node;
        }
    }

    drupal_add_js(array('ids' => $js), 'setting');
    drupal_add_js('/misc/ui/jquery.ui.core.min.js');
    drupal_add_js('/misc/ui/jquery.ui.widget.min.js');
    drupal_add_js('/misc/ui/jquery.ui.accordion.min.js');
    drupal_add_css('/misc/ui/jquery.ui.core.css');
    drupal_add_css('/misc/ui/jquery.ui.accordion.css');
    $output = theme('address_block', array(
        'data' => $res,
        'terms' => $arr,
        'lang' => $language->language));
    return $output;
}


function slug($str){
    return str_replace(' ', '_',str_replace('/', '', strtolower($str)));
}